###############################################################################
# Quinoa
# See https://docs.quarkiverse.io/quarkus-quinoa/dev/index.html
quarkus.quinoa=true
%test.quarkus.quinoa=false
quarkus.quinoa.package-manager-install=true
quarkus.quinoa.package-manager-install.node-version=20.10.0
quarkus.quinoa.enable-spa-routing=true
quarkus.quinoa.dev-server=false

###############################################################################
# Hibernate
#MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS JSON;
#%dev.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost:2000/./target/produktakte;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS JSON;
%dev.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost:2000/./target/produktakte;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS TEXT;
%dev.quarkus.datasource.db-kind=h2
#%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost:2000/mem:produktakte;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS JSON;
%test.quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost:2000/mem:produktakte;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS TEXT;
%test.quarkus.datasource.db-kind=h2

%prod.quarkus.datasource.jdbc.url=${PROD_DB:jdbc:h2:tcp://localhost:2000/./db/produktakte;MODE=PostgreSQL;INIT=CREATE DOMAIN IF NOT EXISTS JSONB AS TEXT;}


#quarkus.datasource.db-kind=${PROD_DB_KIND:h2}
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${PROD_DB_USER:sa}
quarkus.datasource.password=${PROD_DB_PASSWORD:sa}


#quarkus.datasource.jdbc.driver=${JDBC_DRIVER:org.h2.Driver}

quarkus.hibernate-orm.database.generation=update

# Enable debug log (TESTING!!!)
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true
quarkus.log.category."org.hibernate".min-level=TRACE

###############################################################################
# Enable swagger-ui in production mode
quarkus.swagger-ui.always-include=true


###############################################################################
# GrahphQL
# see https://quarkus.io/guides/microprofile-graphql
quarkus.smallrye-graphql.ui.always-include=true
quarkus.smallrye-graphql.ui.enable=true
quarkus.smallrye-graphql.ui.root-path=/graphql-ui

# necessary to observe GraphQLSchema.Builder
quarkus.smallrye-graphql.events.enabled=true

###############################################################################
# JWT

mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=http://localhost/login
quarkus.native.resources.includes=publicKey.pem
smallrye.jwt.sign.key.location=privateKey.pem

quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".level=TRACE
quarkus.log.category."io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator".min-level=TRACE

###############################################################################
# Build opts
quarkus.container-image.builder=docker
